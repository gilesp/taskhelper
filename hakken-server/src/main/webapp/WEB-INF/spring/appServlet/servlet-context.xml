<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:property-placeholder location="classpath:deployContext.properties"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="uk.co.vurt" />
	
	
	<beans:bean name="taskSource" class="uk.co.vurt.hakken.server.task.TaskFileSourceService">
	   <beans:property name="taskDirectoryPaths" value="${taskdefinition.src.dirs}"/>    
	</beans:bean>
	
<!-- 	<beans:bean name="jobService" class="uk.co.vurt.hakken.server.service.JobServiceImpl"/> -->
	    
	<!-- database configuration -->
	<beans:bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="packagesToScan" value="uk.co.vurt.hakken.server.persistence" />
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <beans:property name="showSql" value="${db.hibernate.show_sql}" />
                <beans:property name="generateDdl" value="${db.jpa.generateDdl}" />
                <beans:property name="databasePlatform" value="${db.persistence.dialect}" />
            </beans:bean>
        </beans:property>
    </beans:bean>
    
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="${db.driverClassName}" />
        <beans:property name="url" value="${db.url}" />
        <beans:property name="username" value="${db.username}" />
        <beans:property name="password" value="${db.password}" />
    </beans:bean>

    <beans:bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="myEmf" />
    </beans:bean>
    
    <tx:annotation-driven transaction-manager="txManager" />
    
</beans:beans>
